<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Zoom clone</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link rel="stylesheet" href="style.css">
    
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="https://kit.fontawesome.com/c939d0e917.js"></script>
    
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
    

   
    <script>
        const ROOM_ID ="<%= roomId %>"
        
    </script>
</head>
<body>
   
    

    <div class="main">
        <div class="main__left">
            <div class="main__videos">
                <div id="video-grid">

                </div>
            </div>

            <div class="main__controls">
                <div class="main__controls__block">
                    <div
                        onclick="muteUnmute()"
                        class="main__controls__button main__mute_button">
                        <i class="fas fa-microphone"></i>
                        <span>Mute</span>
                    </div>
                    <div
                        onclick="playStop()"
                        class="main__controls__button main__video_button">
                        <i class="fas fa-video"></i>
                        <span>Stop Video</span>
                    </div>
                </div>
                <div class="main__controls__block">
                    <div class="main__controls__button">
                      <i class="fas fa-shield-alt"></i>
                      <span>Security</span>
                    </div>
                    <div class="main__controls__button">
                      <i class="fas fa-user-friends"></i>
                      <span>Participants</span>
                    </div>
                    <div class="main__controls__button">
                      <i class="fas fa-comment-alt"></i>
                      <span>Chat</span>
                    </div>
                    

                    <div class="main__controls__button" onclick="putGesture()">
                        
                        <div id="pose-result"></div>
                    </div>
                </div>


                  <div class="main__controls__block">
                    <div class="main__controls__button">
                      <span class="leave_meeting">Leave Meeting</span>
                    </div>
                  </div>
            </div>
        </div>

        <div class="main__right">
            <div class="main__header">
                <h6>Chat</h6>
            </div>
            <div class="main__chat_window">
                <ul class="messages">

                </ul>
            </div>
            <div class="main__message_container">
                <input id="chat_message" type="text" placeholder="Type message here...">
            </div>
        </div>
    </div>
    <script src="script.js"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/handpose"></script>
    <script src="fingerpose.js" type="text/javascript"></script>
    <script src="HandRaise.js"></script>
    <script src="main.js"></script>
    <script>
      function putGesture() {
        const res= document.querySelector("#pose-result");
        document.getElementById("chat_message").value = res.innerText;
        
      
        
     
      }
    </script>
    <script>
        const video = myVideo;
        //   const canvas = document.querySelector("#pose-canvas");
        //   const ctx = canvas.getContext("2d");
          
    
          const resultLayer = document.querySelector("#pose-result");
         
        
            // clear canvas overlay
           
    
       
    
        async function initCamera(width, height, fps) {
    
          const constraints = {
            audio: false,
            video: {
              facingMode: "user",
              width: width,
              height: height,
              frameRate: { max: fps }
            }
          };
    
          const video = myVideo
          video.width = width;
          video.height = height;
    
          // get video stream
        //   const stream = await navigator.mediaDevices.getUserMedia(constraints);
        //   video.srcObject = stream;
    
          return new Promise(resolve => {
            video.onloadedmetadata = () => { resolve(video) };
          });
        }
    
    
        window.addEventListener("DOMContentLoaded", () => {
    
          initCamera(
            config.video.width, config.video.height, config.video.fps
          ).then(video => {
           // video.play();
            video.addEventListener("loadeddata", event => {
              console.log("Camera is ready");
              main();
            });
          });
    
        //   const canvas = document.querySelector("#pose-canvas");
          
        //   canvas.width = config.video.width;
        //   canvas.height = config.video.height;
        //   console.log("Canvas initialized");
        }); 

      </script>
</body>
</html>